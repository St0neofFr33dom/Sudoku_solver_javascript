import potentialAnswers from "./potentialAnswers";

describe("Test that ", () => {
  test("Test that the correct values are potential values", () => {
    let puzzle = [
      [0, 0, 0, 4, 5, 6, 7, 8, 9],
      [0, 0, 0, 7, 8, 9, 1, 2, 3],
      [0, 0, 0, 1, 2, 3, 4, 5, 6],
      [2, 3, 4, 5, 6, 7, 8, 9, 1],
      [5, 6, 7, 8, 9, 1, 2, 3, 4],
      [8, 9, 1, 2, 3, 4, 5, 6, 7],
      [3, 4, 5, 6, 7, 8, 9, 1, 2],
      [6, 7, 8, 9, 1, 2, 3, 4, 5],
      [9, 1, 2, 3, 4, 5, 6, 7, 8],
    ];

    let expected = [
      [[1], [2], [3], 0, 0, 0, 0, 0, 0],
      [[4], [5], [6], 0, 0, 0, 0, 0, 0],
      [[7], [8], [9], 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
    ];
    expect(potentialAnswers(puzzle)).toStrictEqual(expected);
  });

  test("Test that the correct values are potential values", () => {
    let puzzle = [
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [2, 3, 4, 5, 6, 7, 8, 9, 1],
      [5, 6, 7, 8, 9, 1, 2, 3, 4],
      [8, 9, 1, 2, 3, 4, 5, 6, 7],
      [3, 4, 5, 6, 7, 8, 9, 1, 2],
      [6, 7, 8, 9, 1, 2, 3, 4, 5],
      [9, 1, 2, 3, 4, 5, 6, 7, 8],
    ];

    let expected = [
      [
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
      ],
      [
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
      ],
      [
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
        [1, 4, 7],
        [2, 5, 8],
        [3, 6, 9],
      ],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
    ];
    expect(potentialAnswers(puzzle)).toStrictEqual(expected);
  });
  test("Test that the correct values are potential values", () => {
    let puzzle = [
      [0, 9, 0, 0, 0, 0, 0, 1, 5],
      [5, 0, 0, 0, 1, 0, 8, 0, 0],
      [0, 6, 0, 0, 0, 0, 0, 2, 0],
      [8, 0, 3, 2, 0, 7, 1, 9, 0],
      [0, 4, 0, 1, 0, 9, 0, 8, 0],
      [0, 1, 9, 5, 0, 4, 6, 0, 2],
      [0, 3, 0, 0, 0, 0, 0, 6, 0],
      [0, 0, 6, 0, 4, 0, 0, 0, 9],
      [9, 8, 0, 0, 0, 0, 0, 4, 0],
    ];

    let result = potentialAnswers(puzzle);
    console.log(result);
    let expected = [
      [
        [2, 3, 4, 7],
        0,
        [2, 4, 7, 8],
        [3, 4, 6, 7, 8],
        [2, 3, 6, 7, 8],
        [2, 3, 6, 8],
        [3, 4, 7],
        0,
        0,
      ],
      [
        0,
        [2, 7],
        [2, 4, 7],
        [3, 4, 6, 7, 9],
        0,
        [2, 3, 6],
        0,
        [3, 7],
        [3, 4, 6, 7],
      ],
      [
        [1, 3, 4, 7],
        0,
        [1, 4, 7, 8],
        [3, 4, 7, 8, 9],
        [3, 5, 7, 8, 9],
        [3, 5, 8],
        [3, 4, 7, 9],
        0,
        [3, 4, 7],
      ],
      [0, [5], 0, 0, [6], 0, 0, 0, [4]],
      [[2, 6, 7], 0, [2, 5, 7], 0, [3, 6], 0, [3, 5, 7], 0, [3, 7]],
      [[7], 0, 0, 0, [3, 8], 0, 0, [3, 7], 0],
      [
        [1, 2, 4, 7],
        0,
        [1, 2, 4, 5, 7],
        [7, 8, 9],
        [2, 5, 7, 8, 9],
        [1, 2, 5, 8],
        [2, 5, 7],
        0,
        [1, 7, 8],
      ],
      [
        [1, 2, 7],
        [2, 5, 7],
        0,
        [3, 7, 8],
        0,
        [1, 2, 3, 5, 8],
        [2, 3, 5, 7],
        [3, 5, 7],
        0,
      ],
      [
        0,
        0,
        [1, 2, 5, 7],
        [3, 6, 7],
        [2, 3, 5, 6, 7],
        [1, 2, 3, 5, 6],
        [2, 3, 5, 7],
        0,
        [1, 3, 7],
      ],
    ];
    expect(result).toStrictEqual(expected);
  });
});
